<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Chosen Concept - DK Liao Games</title>
    <link>http://blog.chosenconcept.dev/post/</link>
    <description>Recent content in Posts on Chosen Concept - DK Liao Games</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Dec 2022 22:36:11 +0800</lastBuildDate><atom:link href="http://blog.chosenconcept.dev/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auto Tester</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0017-automated-test/</link>
      <pubDate>Sat, 24 Dec 2022 22:36:11 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0017-automated-test/</guid>
      <description>So, as a solo developer, it&amp;rsquo;s extremely hard to juggle with all the numbers for balancing.
To help me with that, an automated tester was deployed to help me quickly validate my design changes.
Here&amp;rsquo;s a snippet of it in action:
Auto Tester ðŸ”—I first have the idea of automated testing since my revamp of player and enemy code base. Although still separated, a lot of the designs for player and enemy were structured to be similar.</description>
    </item>
    
    <item>
      <title>Scalable AI</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-zero-devlog/0000-scalable-ai/</link>
      <pubDate>Sun, 18 Dec 2022 10:00:23 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-zero-devlog/0000-scalable-ai/</guid>
      <description>A project made in 7 days ðŸ”—Back in May 2022 I submitted Autopanic to a local contest, which I earned third place. The prize comes with a guaranteed coverage by biggest local gaming news site so not bad. But I digress.
After submission. I decided to take a break and play this &amp;ldquo;Vampire Survivor&amp;rdquo; everyone is crazy about, and oh boy, ain&amp;rsquo;t it some of the best balancing I&amp;rsquo;ve ever seen.</description>
    </item>
    
    <item>
      <title>The art of screenshake</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0012-the-art-of-screenshake/</link>
      <pubDate>Mon, 14 Nov 2022 01:08:39 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0012-the-art-of-screenshake/</guid>
      <description>I&amp;rsquo;m really getting this post clogged up with GIFs huh.
Welp, time for more. Sorry not sorry.
Anyways, I&amp;rsquo;m very inspired by the famous &amp;ldquo;The Art of Screenshake&amp;rdquo; talk and my gameplay is basically derived from that talk.
So this post will be a break down of all the juice added to the game.
Before:
After:
Before that, you may download this special build of the game featuring an array of tools to toggle on/off juice:</description>
    </item>
    
    <item>
      <title>11. Open World Tokyo</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0011-tokyo-night-drifter/</link>
      <pubDate>Sun, 23 Oct 2022 15:54:48 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0011-tokyo-night-drifter/</guid>
      <description>In short, huge mess. But I learned so much from it.
Though OSM marking of Tokyo is pretty robust, the data is pretty difficult to use outside of plain 2D map.
The most difficult part is to solve intersections and generate road mesh, which is extremely hard so have universally good result with a single ruleset.
For example, here&amp;rsquo;s a good one:
Here&amp;rsquo;s one less so:
Real world roads are complex and hard to generate road mesh with one single ruleset.</description>
    </item>
    
    <item>
      <title>10. Quick Vacation</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0010-vacation/</link>
      <pubDate>Sat, 22 Oct 2022 15:25:06 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0010-vacation/</guid>
      <description>Following the minor burnout and finally cleaning up lose ends and laid out some great foundation, I took a three month break to do something else. Like making more games.
Enemy Within ðŸ”—I made a small game about card. Quickly hacked together nice looking setup with HDRP example scene and had some physics fun.
Taipei Bus Rush ðŸ”—There&amp;rsquo;s this long running joke about bus drivers are driving as if they&amp;rsquo;re racing in Taipei.</description>
    </item>
    
    <item>
      <title>09. Level Design</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0009-level-design/</link>
      <pubDate>Fri, 21 Oct 2022 10:00:32 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0009-level-design/</guid>
      <description>The Lack of Level Design ðŸ”—I&amp;rsquo;m quite inspired by Oskar StÃ¥lberg&amp;rsquo;s work on Bad North, and I remember seeing him mentioning the level design.
Canâ€™t remember the exact quote and I forgot which tweet does it come from, but I think it is something like this:
Every randomly generated level is a valid test of player&amp;rsquo;s combat skill
It was a tweet about how WFC can be easily utilized in a combat-focused game but not so much in a puzzle game.</description>
    </item>
    
    <item>
      <title>08. AI Behavior Revamp and Procedural Animation</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0008-enemy-revamp-and-procedural-animation/</link>
      <pubDate>Thu, 20 Oct 2022 10:00:25 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0008-enemy-revamp-and-procedural-animation/</guid>
      <description>AI Behavior Revamp ðŸ”—My old solution relies on Unity&amp;rsquo;s NavMesh and NavMeshAgent. This becomes a chore to me later on because:
As my levels becomes more dynamic, managing NavMesh becomes a tedious work NavMeshAgent can reliably move towards the destination, but also costs too much to request frequently My gameplay is very fast-paced, so I&amp;rsquo;d like my enemies to react to player action as fast as possible So I decided to move to a custom solution that is basically about picking a preferred direction and move forward.</description>
    </item>
    
    <item>
      <title>07. Custom UI Framework</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0007-user-interface/</link>
      <pubDate>Wed, 19 Oct 2022 10:10:01 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0007-user-interface/</guid>
      <description>Back then I&amp;rsquo;m all sold on the new Unity Input System, which has some really promising features and I don&amp;rsquo;t want to walk back to use the old input system. However the new Input System for whatever reason doesn&amp;rsquo;t gel well with their UI Events.
So I need a custom UI framework.
Inspired by Phi Dinh&amp;rsquo;s Recompile, I figure a fully text-based UI would be great for my project. Although I&amp;rsquo;m incapable to do fancy ASCII animation and having to support Chinese characters by default (&amp;lsquo;cause, I speak Mandarin) removes quite a lot of presentation choices, limiting myself can help me focus more on actual useful stuffs.</description>
    </item>
    
    <item>
      <title>06. Minor Burn Out</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0006-burnt-out/</link>
      <pubDate>Wed, 19 Oct 2022 10:00:33 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0006-burnt-out/</guid>
      <description>It is January 2021, my three-month project has stretched into 8 months and I&amp;rsquo;m not anywhere near the finish line. Actually, I&amp;rsquo;m not getting anywhere. But I&amp;rsquo;m much wiser now, armed with some actual proper game development knowledge and starting to get a grip of what Unity can do properly.
By what Unity can do, I mean it can&amp;rsquo;t do anything. So no more hacking with existing solutions, I must get my hands dirty and start building reliable stuffs.</description>
    </item>
    
    <item>
      <title>05. Early Visual Design</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0005-early-visuals/</link>
      <pubDate>Tue, 18 Oct 2022 10:00:03 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0005-early-visuals/</guid>
      <description>I wanted to do something that is dirt cheap and effective, though I don&amp;rsquo;t really know where I&amp;rsquo;m going. But I quickly established the style with heavy depth of field and the use of dynamic lighting.
Then I tried an ambient occlusion heavy visual that focuses on color palette swapping. Which almost stayed till the end.
But then the level geometry increased around this time, so I tried my hand at decorating the levels with Unity Particle System.</description>
    </item>
    
    <item>
      <title>04. Early Level Design with Wave Function Collapse</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0004-procedural-level/</link>
      <pubDate>Mon, 17 Oct 2022 10:10:00 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0004-procedural-level/</guid>
      <description>I was quite obsessed with Oskar StÃ¥lberg&amp;rsquo;s games back in August 2020. Bad North and Townscaper both proven to be some decent piece and showcase the randomly generated with authored visual potential of Wave Function Collapse quite well.
So I tried my hand at writing one such algorithm over several attempts with some success.
Then I proceed to scrap the idea of using WFC.
The reason being although I&amp;rsquo;m starting to generate some unique geometry (as in not seem like tiles), they never hit any sense of meaningfulness in visual.</description>
    </item>
    
    <item>
      <title>03. Scope Change</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0003-change-of-plan/</link>
      <pubDate>Mon, 17 Oct 2022 10:00:03 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0003-change-of-plan/</guid>
      <description>Because of course there&amp;rsquo;s a scope creep for every beginner&amp;rsquo;s project.
I thought to myself that a game about clearing hordes is not going to sell in 2020, which is later proven wrong by recent success of Vampire survivor. (Had some fun revisiting this idea, but that&amp;rsquo;s for later)
And my initial design revolves around player having an ability to run faster than enemies, which of course makes player completely invincible.</description>
    </item>
    
    <item>
      <title>02. Early Design</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0002-shoot-em-up/</link>
      <pubDate>Sun, 16 Oct 2022 10:00:03 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0002-shoot-em-up/</guid>
      <description>The first iteration of the game is naturally a Shoot &amp;rsquo;em Up. Fighting hordes of enemies in a cityscape.
The game is supposed to be about recurring challenge, with some bosses as checkpoints that grant you permanent upgrades.
This is also when the &amp;ldquo;Fully Diegetic&amp;rdquo; idea started to kick off. I want players to have a companion commenting on their every defeat (which I didn&amp;rsquo;t know Hades do this back then), and by defeat, being actually dead.</description>
    </item>
    
    <item>
      <title>01. Prototype</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0001-prototype/</link>
      <pubDate>Sat, 15 Oct 2022 17:35:26 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0001-prototype/</guid>
      <description>April 2020, inspired by A Short Hike, I decided to start learning how to making my own game. I started with Sebastian Lague&amp;rsquo;s Twinstick Shooter Tutorial and quickly build up something almost enjoyable:
And made a Reddit post to brag about it.
I also accidentally let the projectiles knockback my shooter enemy, resulting in some cool Shoot &amp;amp; Retreat moment.
I think to myself, wow, seven days and it is already fun.</description>
    </item>
    
    <item>
      <title>00. The Target</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0000-autopanic/</link>
      <pubDate>Fri, 14 Oct 2022 04:02:38 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0000-autopanic/</guid>
      <description>I&amp;rsquo;m currently making a fully diegetic minimalist twin-stick shooter with Rogue-like elements.
Setup ðŸ”—An AI assistant wake you up from a long slumber. All you can do is to follow its guidance and ascend to the top floor.
Goals ðŸ”—I find 13 Sentinels: Aegis Rim combat visual to be simple and effective, but the combat design itself leaves a lot to be desired. So I wanted to make a twin-stick shooter with 13 Sentinels: Aegis Rim&amp;rsquo;s visual.</description>
    </item>
    
    <item>
      <title>A quick and dirty large scale city production workflow</title>
      <link>http://blog.chosenconcept.dev/post/game-design/0003-quick-open-world/</link>
      <pubDate>Mon, 29 Mar 2021 19:16:23 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/game-design/0003-quick-open-world/</guid>
      <description>Introduction ðŸ”—Open world games always fascinates me. But actually making one is pretty intimidating as a solo dev, while a procedural toolset might work, making a robust one might be tedious and thereby time consuming. After being burnt out from an older project, I decided to take a break and have some fun. So I decided to test how fast can I hack an open world with the least tools and costs.</description>
    </item>
    
  </channel>
</rss>
