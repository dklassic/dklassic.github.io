<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Game Design on Chosen Concept - DK Liao Games</title>
    <link>http://blog.chosenconcept.dev/tags/game-design/</link>
    <description>Recent content in Game Design on Chosen Concept - DK Liao Games</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Dec 2022 22:36:11 +0800</lastBuildDate><atom:link href="http://blog.chosenconcept.dev/tags/game-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auto Tester</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0017-automated-test/</link>
      <pubDate>Sat, 24 Dec 2022 22:36:11 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0017-automated-test/</guid>
      <description>So, as a solo developer, it&amp;rsquo;s extremely hard to juggle with all the numbers for balancing.
To help me with that, an automated tester was deployed to help me quickly validate my design changes.
Here&amp;rsquo;s a snippet of it in action:
Auto Tester ðŸ”—I first have the idea of automated testing since my revamp of player and enemy code base. Although still separated, a lot of the designs for player and enemy were structured to be similar.</description>
    </item>
    
    <item>
      <title>Scalable AI</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-zero-devlog/0000-scalable-ai/</link>
      <pubDate>Sun, 18 Dec 2022 10:00:23 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-zero-devlog/0000-scalable-ai/</guid>
      <description>A project made in 7 days ðŸ”—Back in May 2022 I submitted Autopanic to a local contest, which I earned third place. The prize comes with a guaranteed coverage by biggest local gaming news site so not bad. But I digress.
After submission. I decided to take a break and play this &amp;ldquo;Vampire Survivor&amp;rdquo; everyone is crazy about, and oh boy, ain&amp;rsquo;t it some of the best balancing I&amp;rsquo;ve ever seen.</description>
    </item>
    
    <item>
      <title>The art of screenshake</title>
      <link>http://blog.chosenconcept.dev/post/autopanic-devlog/0012-the-art-of-screenshake/</link>
      <pubDate>Mon, 14 Nov 2022 01:08:39 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/autopanic-devlog/0012-the-art-of-screenshake/</guid>
      <description>I&amp;rsquo;m really getting this post clogged up with GIFs huh.
Welp, time for more. Sorry not sorry.
Anyways, I&amp;rsquo;m very inspired by the famous &amp;ldquo;The Art of Screenshake&amp;rdquo; talk and my gameplay is basically derived from that talk.
So this post will be a break down of all the juice added to the game.
Before:
After:
Before that, you may download this special build of the game featuring an array of tools to toggle on/off juice:</description>
    </item>
    
    <item>
      <title>A quick and dirty large scale city production workflow</title>
      <link>http://blog.chosenconcept.dev/post/game-design/0003-quick-open-world/</link>
      <pubDate>Mon, 29 Mar 2021 19:16:23 +0800</pubDate>
      
      <guid>http://blog.chosenconcept.dev/post/game-design/0003-quick-open-world/</guid>
      <description>Introduction ðŸ”—Open world games always fascinates me. But actually making one is pretty intimidating as a solo dev, while a procedural toolset might work, making a robust one might be tedious and thereby time consuming. After being burnt out from an older project, I decided to take a break and have some fun. So I decided to test how fast can I hack an open world with the least tools and costs.</description>
    </item>
    
  </channel>
</rss>
